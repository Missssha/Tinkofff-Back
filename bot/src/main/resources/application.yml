app:
  telegram-token: ${TELEGRAM-API-KEY}
  retry:
    trigger: server-client
    strategy: const
    max-attempts: 3
    delay: 5
    statuses: 400, 401, 402, 403, 404, 500, 501, 502, 503, 504
  bucketJ:
    refill: 5
    capacity: 10
    timeout: 1
  kafka:
    partitions-num: 10
    replicas-num: 1
    topics: topic1
    topic_dlq: topic_dlq

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

  kafka:
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    properties:
      spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
      spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
      spring.json.trusted.packages: '*'
      spring.json.value.default.type: dto.request.LinkUpdateRequest
    bootstrapServers: localhost:29092

server:
  port: 8090

springdoc:
  swagger-ui:
    path: swagger-ui

logging:
  config: classpath:log4j2-plain.xml
