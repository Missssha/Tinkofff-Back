package edu.java.domain.jooq;

import edu.java.domain.jooq.tables.Chat;
import edu.java.domain.jooq.tables.ChatLink;
import edu.java.domain.jooq.tables.Link;
import edu.java.domain.jooq.tables.LinksSof;
import edu.java.domain.jooq.tables.records.ChatLinkRecord;
import edu.java.domain.jooq.tables.records.ChatRecord;
import edu.java.domain.jooq.tables.records.LinkRecord;
import edu.java.domain.jooq.tables.records.LinksSofRecord;
import javax.annotation.processing.Generated;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ChatRecord> PK_CHAT =
        Internal.createUniqueKey(Chat.CHAT, DSL.name("PK_CHAT"), new TableField[] {Chat.CHAT.ID}, true);
    public static final UniqueKey<ChatLinkRecord> CONSTRAINT_8 = Internal.createUniqueKey(ChatLink.CHAT_LINK,
        DSL.name("CONSTRAINT_8"),
        new TableField[] {ChatLink.CHAT_LINK.CHAT_ID, ChatLink.CHAT_LINK.LINK_ID},
        true
    );
    public static final UniqueKey<ChatLinkRecord> PK_CHAT_LINK = Internal.createUniqueKey(ChatLink.CHAT_LINK,
        DSL.name("PK_CHAT_LINK"),
        new TableField[] {ChatLink.CHAT_LINK.ID},
        true
    );
    public static final UniqueKey<LinkRecord> CONSTRAINT_2 =
        Internal.createUniqueKey(Link.LINK, DSL.name("CONSTRAINT_2"), new TableField[] {Link.LINK.URL}, true);
    public static final UniqueKey<LinkRecord> PK_LINK =
        Internal.createUniqueKey(Link.LINK, DSL.name("PK_LINK"), new TableField[] {Link.LINK.ID}, true);
    public static final UniqueKey<LinksSofRecord> PK_LINKS_SOF = Internal.createUniqueKey(LinksSof.LINKS_SOF,
        DSL.name("PK_LINKS_SOF"),
        new TableField[] {LinksSof.LINKS_SOF.ID},
        true
    );
}
